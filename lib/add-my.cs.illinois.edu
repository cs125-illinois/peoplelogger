/* global $, patchRequire, XMLHttpRequest, btoa */

'use strict'

var require = patchRequire(require) // eslint-disable-line no-use-before-define
var _ = require('lodash')

var casper = require('casper').create({
  logLevel: 'debug',
  viewportSize: {
    width: 1280, height: 800
  }
})

var fs = require('fs')
var utils = require('utils')

// require('assert') doesn't seem to work in CasperJS
function assert (condition, message) {
  if (!condition) {
    console.error(message)
  }
}

// my.cs.illinois.edu can throw 500 errors when handling certain inputs
function checkStatus (currentPage) {
  assert(currentPage.currentHTTPStatus === 200)
}

try {
  var config = {}
  try {
    config = JSON.parse(fs.read(casper.cli.args[0]))
  } catch (err) {
    console.error(err)
  }
  var debug = casper.verbose = config.debugGet
} catch (err) {
  console.error(err)
}

if (debug) {
  console.log(JSON.stringify(options, null, 2))
}

casper.start('https://my.cs.illinois.edu/shibboleth.asp', function waitForLoginForm () {
  checkStatus(this)
  this.waitForSelector('#shib_login')
})
casper.then(function fillLogin () {
  this.fill('form', {
    j_username: config.secrets.students.username,
    j_password: config.secrets.students.password
  })
})
casper.then(function submitLogin () {
  this.click('#submit_button input')
})
casper.then(function waitForLoginFill () {
  checkStatus(this)
  this.waitForSelector('#clsadm-content')
})

casper.thenOpen(utils.format('https://my.cs.illinois.edu/classtools/viewroster.asp?subj=%s&num=%s&sec=%s', config.subject, config.number, config.section))
casper.then(function waitForCheckboxes () {
  checkStatus(this)
  this.waitForSelector('form[action="/classtools/viewroster.asp"]')
})

casper.then(function checkBox () {
  this.page.injectJs('jquery/jquery-3.2.1.min.js')
  var clicked = this.evaluate(function (semester, section) {
    var semesterHeader = $(":contains('" + semester + "')")
      .filter(function () {
        return $(this).children().length === 0
      })
    var semesterHeaderType = $(semesterHeader).get(0).tagName
    var clicked = 0
    $(semesterHeader).nextAll().each(function (unused, element) {
      if (section === $(element).text().trim()) {
        $(element).prev('input').first().prop('checked', true)
        clicked++
      } else if ($(element).get(0).tagName === semesterHeaderType) {
        return false
      }
    })
    return clicked
  }, config.semester, config.section.toString())
  assert(clicked === 1, 'no section clicked')
})
casper.then(function submitCheckbox (section) {
  this.click('input[value="View Roster"]')
})
casper.then(function waitForRoster () {
  checkStatus(this)
  this.waitForSelector('footer', null, null, 180000)
})
casper.then(function fillLogin () {
  checkStatus(this)
  this.fill('form', {
    netid: config.netIDs
  })
})
casper.then(function submitLogin () {
  this.click('input[value="Add"]')
})


casper.run()

// vim: et:ts=2:sw=2:ft=javascript
